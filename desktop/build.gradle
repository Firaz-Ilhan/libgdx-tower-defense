sourceCompatibility = 1.8
sourceSets.main.java.srcDirs = ["src/"]
sourceSets.main.resources.srcDirs = ["../core/assets"]

project.ext.mainClassName = "com.tower.defense.desktop.DesktopLauncher"
project.ext.assetsDir = new File("../core/assets")

eclipse.project.name = appName + "-desktop"

import org.gradle.internal.os.OperatingSystem

task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true

    if (OperatingSystem.current() == OperatingSystem.MAC_OS) {
        // Required for execution under macOS
        // see https://github.com/libgdx/libgdx/wiki/Starter-classes-and-configuration#common-issues-1
        jvmArgs += "-XstartOnFirstThread"
    }
}

task debug(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
    debug = true
}

jar {
    // sets the name of the .jar file
    archiveBaseName.set(appName)
    // the duplicatesStrategy will matter starting in Gradle 7.0
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    dependsOn configurations.runtimeClasspath
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    // remove unnecessary files in the jar
    exclude('META-INF/INDEX.LIST', 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA')
    dependencies {
        exclude('META-INF/INDEX.LIST', 'META-INF/maven/**')
    }
    // setting the manifest makes the JAR runnable
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
    // may help on some OSes that need extra instruction to make runnable jars
    doLast {
        file(archiveFile).setExecutable(true, false)
    }
}
test {
    useJUnitPlatform()
    dependencies {
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    }
}
